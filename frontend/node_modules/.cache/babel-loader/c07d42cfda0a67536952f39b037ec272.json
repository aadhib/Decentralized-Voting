{"ast":null,"code":"var _jsxFileName = \"/Users/aadhib/Downloads/Blockchain-Based-Voting-System-main/frontend/src/components/CustomRoutes.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Login from \"../pages/Login\";\nimport Signup from \"../pages/Signup\";\nimport View from \"../pages/View\";\nimport { AuthContext } from \"../contexts/Auth\";\nimport UserPollsPage from \"../pages/User/Polls\";\nimport HomePage from \"../pages/Admin/Home\";\nimport ProfilePage from \"../pages/User/Profile\";\nimport Default from \"../layouts/Default\";\nimport AdminUsersPage from \"../pages/Admin/Users\";\nimport AdminVerifyPage from \"../pages/Admin/Verify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const authContext = useContext(AuthContext);\n\n  const getRoutes = () => {\n    if (authContext.loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 37\n    }, this);\n\n    if (authContext.authenticated) {\n      // if the user is authenticated then\n      const adminMenu = [{\n        name: \"Home\",\n        link: \"/\"\n      }, {\n        name: \"Verify Users\",\n        link: \"/users\"\n      }, {\n        name: \"Profile\",\n        link: \"/profile\"\n      }];\n      const userMenu = [{\n        name: \"Polls\",\n        link: \"/\"\n      }, {\n        name: \"Profile\",\n        link: \"/profile\"\n      }];\n\n      if (authContext.isAdmin) {\n        // if the user is admin\n        return /*#__PURE__*/_jsxDEV(Default, {\n          menu: adminMenu,\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/users\",\n              element: /*#__PURE__*/_jsxDEV(AdminUsersPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/verify/:name/:id\",\n              element: /*#__PURE__*/_jsxDEV(AdminVerifyPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this);\n      } else {\n        //  if the user in not admin\n        return /*#__PURE__*/_jsxDEV(Default, {\n          menu: userMenu,\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(UserPollsPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      // if the user is not authenticated\n      return /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/view\",\n          element: /*#__PURE__*/_jsxDEV(View, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return getRoutes();\n}, \"g0q6N3HTsGa67OokMUhTOzE2a0M=\");","map":{"version":3,"sources":["/Users/aadhib/Downloads/Blockchain-Based-Voting-System-main/frontend/src/components/CustomRoutes.tsx"],"names":["React","useContext","Routes","Route","Home","Login","Signup","View","AuthContext","UserPollsPage","HomePage","ProfilePage","Default","AdminUsersPage","AdminVerifyPage","authContext","getRoutes","loading","authenticated","adminMenu","name","link","userMenu","isAdmin"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Login from \"../pages/Login\";\nimport Signup from \"../pages/Signup\";\nimport View from \"../pages/View\";\nimport { AuthContext } from \"../contexts/Auth\";\nimport UserPollsPage from \"../pages/User/Polls\";\nimport HomePage from \"../pages/Admin/Home\";\nimport ProfilePage from \"../pages/User/Profile\";\nimport Default from \"../layouts/Default\";\nimport AdminUsersPage from \"../pages/Admin/Users\";\nimport AdminVerifyPage from \"../pages/Admin/Verify\";\n\nexport default () => {\n  const authContext = useContext(AuthContext);\n\n  const getRoutes = (): JSX.Element => {\n    if (authContext.loading) return <div>loading...</div>;\n\n    if (authContext.authenticated) {\n      // if the user is authenticated then\n\n      const adminMenu = [\n        { name: \"Home\", link: \"/\" },\n        { name: \"Verify Users\", link: \"/users\" },\n        { name: \"Profile\", link: \"/profile\" },\n      ];\n\n      const userMenu = [\n        { name: \"Polls\", link: \"/\" },\n        { name: \"Profile\", link: \"/profile\" },\n      ];\n\n      if (authContext.isAdmin) {\n        // if the user is admin\n        return (\n          <Default menu={adminMenu}>\n            <Routes>\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"/users\" element={<AdminUsersPage />} />\n              <Route path=\"/verify/:name/:id\" element={<AdminVerifyPage />} />\n              <Route path=\"/profile\" element={<ProfilePage />} />\n            </Routes>\n          </Default>\n        );\n      } else {\n        //  if the user in not admin\n        return (\n          <Default menu={userMenu}>\n            <Routes>\n              <Route path=\"/\" element={<UserPollsPage />} />\n              <Route path=\"/profile\" element={<ProfilePage />} />\n            </Routes>\n          </Default>\n        );\n      }\n    } else {\n      // if the user is not authenticated\n      return (\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/signup\" element={<Signup />} />\n          <Route path=\"/view\" element={<View />} />\n        </Routes>\n      );\n    }\n  };\n\n  return getRoutes();\n};\n"]},"metadata":{},"sourceType":"module"}