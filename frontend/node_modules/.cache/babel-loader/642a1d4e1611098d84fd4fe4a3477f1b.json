{"ast":null,"code":"var _jsxFileName = \"/Users/aadhib/Documents/Main Project/Main Project _ Decentralized Voting /frontend/src/components/Polls/Chart.tsx\";\nimport React from \"react\";\nimport axios from \"../../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  const votes = props.votes;\n\n  const getButtons = () => {\n    const names = [];\n\n    const vote = candidate => {\n      var _props$userId;\n\n      axios.post(\"/polls/vote\", {\n        id: (_props$userId = props.userId) === null || _props$userId === void 0 ? void 0 : _props$userId.toString(),\n        name: props.userName,\n        candidate\n      }).then(_ => window.location.reload()).catch(err => console.log({\n        err\n      }));\n    };\n\n    for (const name in votes) {\n      names.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => vote(name),\n        className: \"button-wrapper text-normal\",\n        children: \"vote\"\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this));\n    }\n\n    return names;\n  };\n\n  const getNames = () => {\n    const names = [];\n\n    for (const name in votes) {\n      names.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-wrapper text-normal\",\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this));\n    }\n\n    return names;\n  };\n\n  const getTotal = () => {\n    let total = 0;\n\n    for (const name in votes) {\n      total += parseInt(votes[name]);\n    }\n\n    return total;\n  };\n\n  const getBars = () => {\n    const bars = [];\n    const total = getTotal();\n\n    for (const name in votes) {\n      const count = votes[name];\n      bars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: count != 0 ? `${count * 100 / total}%` : \"auto\",\n            border: \"2px solid #4daaa7\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            color: \"white\",\n            backgroundColor: \"rgb(77, 170, 167)\",\n            paddingBottom: 10,\n            paddingTop: 10\n          },\n          children: votes[name]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this));\n    }\n\n    return bars;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bars-container\",\n      children: getBars()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"names-wrapper\",\n      children: getNames()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), props.enableVote ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-wrapper\",\n      children: getButtons()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/aadhib/Documents/Main Project/Main Project _ Decentralized Voting /frontend/src/components/Polls/Chart.tsx"],"names":["React","axios","Chart","props","votes","getButtons","names","vote","candidate","post","id","userId","toString","name","userName","then","_","window","location","reload","catch","err","console","log","push","getNames","getTotal","total","parseInt","getBars","bars","count","height","border","display","flexDirection","justifyContent","alignItems","color","backgroundColor","paddingBottom","paddingTop","enableVote"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"../../axios\";\n\ninterface ChartProps {\n  votes: any;\n  enableVote?: boolean;\n  userId?: number;\n  userName?: string;\n}\n\nconst Chart = (props: ChartProps) => {\n  const votes = props.votes;\n\n  const getButtons = () => {\n    const names = [];\n\n    const vote = (candidate: string) => {\n      axios\n        .post(\"/polls/vote\", {\n          id: props.userId?.toString(),\n          name: props.userName,\n          candidate,\n        })\n        .then((_) => window.location.reload())\n        .catch((err) => console.log({ err }));\n    };\n\n    for (const name in votes) {\n      names.push(\n        <button\n          onClick={() => vote(name)}\n          key={name}\n          className=\"button-wrapper text-normal\"\n        >\n          vote\n        </button>\n      );\n    }\n\n    return names;\n  };\n\n  const getNames = () => {\n    const names = [];\n\n    for (const name in votes) {\n      names.push(\n        <div key={name} className=\"name-wrapper text-normal\">\n          {name}\n        </div>\n      );\n    }\n\n    return names;\n  };\n\n  const getTotal = () => {\n    let total = 0;\n\n    for (const name in votes) {\n      total += parseInt(votes[name]);\n    }\n\n    return total;\n  };\n\n  const getBars = () => {\n    const bars = [];\n    const total = getTotal();\n\n    for (const name in votes) {\n      const count = votes[name];\n      bars.push(\n        <div key={name} className=\"bar-wrapper\">\n          <div\n            style={{\n              height: count != 0 ? `${(count * 100) / total}%` : \"auto\",\n              border: \"2px solid #4daaa7\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n              color: \"white\",\n              backgroundColor: \"rgb(77, 170, 167)\",\n              paddingBottom: 10,\n              paddingTop: 10,\n            }}\n          >\n            {votes[name]}\n          </div>\n        </div>\n      );\n    }\n\n    return bars;\n  };\n\n  return (\n    <div>\n      <div className=\"bars-container\">{getBars()}</div>\n      <div className=\"names-wrapper\">{getNames()}</div>\n\n      {props.enableVote ? (\n        <div className=\"buttons-wrapper\">{getButtons()}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}