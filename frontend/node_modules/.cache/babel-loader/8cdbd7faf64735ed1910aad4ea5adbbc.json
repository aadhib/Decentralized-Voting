{"ast":null,"code":"var _jsxFileName = \"/Users/aadhib/Documents/Main Project/Main Project _ Decentralized Voting /frontend/src/pages/View.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"../axios\";\nimport Polls from \"./Polls\";\nimport Result from \"./Result\";\nimport Start from \"./Start\";\nimport Back from \"../components/Back\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst View = props => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(\"not-started\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    setLoading(true);\n    axios.get(\"/polls/status\").then(res => {\n      setStatus(res.data.status);\n      setLoading(false);\n    }).catch(error => console.log({\n      error\n    }));\n  }, []);\n\n  let comp = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 14\n  }, this);\n\n  if (loading) return comp;\n  if (status === \"finished\") comp = /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 37\n  }, this);\n  if (status === \"running\") comp = /*#__PURE__*/_jsxDEV(Polls, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 36\n  }, this);\n  if (status === \"not-started\") comp = /*#__PURE__*/_jsxDEV(Start, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 40\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-container\",\n    children: [/*#__PURE__*/_jsxDEV(Back, {\n      call: () => navigate(\"/\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(View, \"6k4YdZ5N1CTtMXJKAOBMfomEUFM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = View;\nexport default View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/Users/aadhib/Documents/Main Project/Main Project _ Decentralized Voting /frontend/src/pages/View.tsx"],"names":["React","useEffect","useState","useNavigate","axios","Polls","Result","Start","Back","View","props","loading","setLoading","status","setStatus","navigate","get","then","res","data","catch","error","console","log","comp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAqBC,WAArB,QAAwC,cAAxC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAoC;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAClC,aADkC,CAApC;AAIA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAR,IAAAA,KAAK,CACFY,GADH,CACO,eADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbJ,MAAAA,SAAS,CAACI,GAAG,CAACC,IAAJ,CAASN,MAAV,CAAT;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH,EAMGQ,KANH,CAMUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA;AAAF,KAAZ,CANpB;AAOD,GATQ,EASN,EATM,CAAT;;AAWA,MAAIG,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA,UAAX;;AAEA,MAAIb,OAAJ,EAAa,OAAOa,IAAP;AAEb,MAAIX,MAAM,KAAK,UAAf,EAA2BW,IAAI,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAC3B,MAAIX,MAAM,KAAK,SAAf,EAA0BW,IAAI,gBAAG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAC1B,MAAIX,MAAM,KAAK,aAAf,EAA8BW,IAAI,gBAAG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAE9B,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE,MAAMT,QAAQ,CAAC,GAAD;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAMS;AAAN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjCD;;GAAMf,I;UAMaN,W;;;KANbM,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { RouteProps, useNavigate } from \"react-router\";\nimport axios from \"../axios\";\nimport Polls from \"./Polls\";\nimport Result from \"./Result\";\nimport Start from \"./Start\";\nimport Back from \"../components/Back\";\n\nconst View = (props: RouteProps): JSX.Element => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [status, setStatus] = useState<\"not-started\" | \"running\" | \"finished\">(\n    \"not-started\"\n  );\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(\"/polls/status\")\n      .then((res) => {\n        setStatus(res.data.status);\n        setLoading(false);\n      })\n      .catch((error) => console.log({ error }));\n  }, []);\n\n  let comp = <div></div>;\n\n  if (loading) return comp;\n\n  if (status === \"finished\") comp = <Result />;\n  if (status === \"running\") comp = <Polls />;\n  if (status === \"not-started\") comp = <Start />;\n\n  return (\n    <div className=\"view-container\">\n      <Back call={() => navigate(\"/\")} />\n      <div>{comp}</div>\n    </div>\n  );\n};\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}