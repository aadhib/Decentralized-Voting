{"ast":null,"code":"var _jsxFileName = \"/Users/aadhib/Downloads/Blockchain-Based-Voting-System-main/frontend/src/pages/User/Polls.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"../../axios\";\nimport Chart from \"../../components/Polls/Chart\";\nimport Finished from \"../../components/Polls/Finished\";\nimport Panel from \"../../components/Polls/Panel\";\nimport Running from \"../../components/Polls/Running\";\nimport Waiting from \"../../components/Waiting\";\nimport { AuthContext } from \"../../contexts/Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst User = () => {\n  _s();\n\n  const [voteState, setVoteStatus] = useState(\"checking\");\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({\n    name: \"\",\n    description: \"\",\n    votes: {}\n  });\n  const [votable, setVotable] = useState(\"\");\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    console.log(\"called here ?\");\n    axios.get(\"/polls/status\").then(res => {\n      setVoteStatus(res.data.status);\n      setLoading(false);\n    }).catch(error => console.log({\n      error\n    }));\n  }, []);\n  useEffect(() => {\n    if (voteState !== \"checking\") {\n      axios.get(\"/polls/\").then(res => {\n        setData(res.data);\n        console.log(res);\n        setLoading(false);\n      });\n      axios.post(\"/polls/check-voteability\", {\n        id: authContext.id.toString()\n      }).then(res => {\n        setVotable(res.data);\n      }).catch(err => console.log(err));\n    }\n  });\n  if (loading || voteState === \"checking\") return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 51\n  }, this);\n  if (voteState === \"not-started\") return /*#__PURE__*/_jsxDEV(Waiting, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 43\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    name: data.name,\n    description: data.description,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [voteState === \"running\" ? /*#__PURE__*/_jsxDEV(Running, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(Finished, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        enableVote: votable === \"not-voted\",\n        userId: authContext.id,\n        userName: authContext.name,\n        votes: data.votes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"I3Yv5C5ZNmn+uYg0sMcN6x/5qv4=\");\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/aadhib/Downloads/Blockchain-Based-Voting-System-main/frontend/src/pages/User/Polls.tsx"],"names":["React","useContext","useEffect","useState","axios","Chart","Finished","Panel","Running","Waiting","AuthContext","User","voteState","setVoteStatus","loading","setLoading","data","setData","name","description","votes","votable","setVotable","authContext","console","log","get","then","res","status","catch","error","post","id","toString","err"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"../../axios\";\nimport Chart from \"../../components/Polls/Chart\";\nimport Finished from \"../../components/Polls/Finished\";\nimport Panel from \"../../components/Polls/Panel\";\nimport Running from \"../../components/Polls/Running\";\nimport Waiting from \"../../components/Waiting\";\nimport { AuthContext } from \"../../contexts/Auth\";\n\nconst User = () => {\n  const [voteState, setVoteStatus] = useState<\n    \"finished\" | \"running\" | \"not-started\" | \"checking\"\n  >(\"checking\");\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({ name: \"\", description: \"\", votes: {} });\n  const [votable, setVotable] = useState(\"\");\n\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    console.log(\"called here ?\");\n\n    axios\n      .get(\"/polls/status\")\n      .then((res) => {\n        setVoteStatus(res.data.status);\n        setLoading(false);\n      })\n      .catch((error) => console.log({ error }));\n  }, []);\n\n  useEffect(() => {\n    if (voteState !== \"checking\") {\n      axios.get(\"/polls/\").then((res) => {\n        setData(res.data);\n        console.log(res);\n        setLoading(false);\n      });\n\n      axios\n        .post(\"/polls/check-voteability\", {\n          id: authContext.id.toString(),\n        })\n        .then((res) => {\n          setVotable(res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n  });\n\n  if (loading || voteState === \"checking\") return <div></div>;\n\n  if (voteState === \"not-started\") return <Waiting />;\n\n  return (\n    <Panel name={data.name} description={data.description}>\n      <>\n        {voteState === \"running\" ? <Running /> : <Finished />}\n\n        <Chart\n          enableVote={votable === \"not-voted\"}\n          userId={authContext.id}\n          userName={authContext.name}\n          votes={data.votes}\n        />\n      </>\n    </Panel>\n  );\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}