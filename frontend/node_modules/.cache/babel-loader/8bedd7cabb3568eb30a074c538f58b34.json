{"ast":null,"code":"var _jsxFileName = \"/Users/aadhib/Downloads/Blockchain-Based-Voting-System-main/frontend/src/pages/Admin/Start.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport axios from \"../../axios\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  name: yup.string().min(3).required(),\n  description: yup.string().min(10).required()\n});\n\nconst Start = () => {\n  _s();\n\n  const [candidates, setCandidates] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [info, setInfo] = useState(\"\");\n  const candidateField = useRef(null);\n  const candidateInfoField = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [error !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }, this) : null, /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        description: \"\"\n      },\n      validationSchema: schema,\n      onSubmit: _ref => {\n        let {\n          name,\n          description\n        } = _ref;\n        setLoading(true);\n        let candidatesError = \"\";\n        if (candidates.length < 2) candidatesError = \"Not Enough Candidates\";\n\n        for (let i = 0; i < candidates.length; i++) {\n          const candidate = candidates[i];\n\n          if (candidate.name.length < 3) {\n            candidatesError = \"invalid name \" + candidate.name;\n            break;\n          }\n\n          if (candidate.info.length < 10) {\n            candidatesError = \"invalid info for \" + candidate.name;\n            break;\n          }\n        }\n\n        setError(candidatesError);\n\n        if (candidatesError === \"\") {\n          axios.post(\"/polls/start\", {\n            name,\n            description,\n            candidates\n          }).then(_ => {\n            window.location.reload();\n          }).catch(err => {\n            var _err$response;\n\n            let error = err.message;\n            if (err !== null && err !== void 0 && (_err$response = err.response) !== null && _err$response !== void 0 && _err$response.data) error = err.response.data;\n            setError(error.slice(0, 50));\n            setLoading(false);\n          });\n        }\n      },\n      children: _ref2 => {\n        let {\n          errors,\n          touched,\n          getFieldProps,\n          handleSubmit\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"name\",\n              type: \"text\",\n              placeholder: \"Poll Name\",\n              ...getFieldProps(\"name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error-text\",\n              children: touched.name && errors.name ? errors.name : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"description\",\n              type: \"text\",\n              placeholder: \"Poll Description\",\n              ...getFieldProps(\"description\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-error-text\",\n              children: touched.description && errors.description ? errors.description : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), candidates.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"candidates-container\",\n            children: candidates.map((_ref3, index) => {\n              let {\n                name,\n                info\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"candidate-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => {\n                    const newList = [...candidates];\n                    const i = newList.indexOf({\n                      name,\n                      info\n                    });\n                    newList.splice(i, 1);\n                    setCandidates(newList);\n                  },\n                  className: \"remove\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-dash-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-candidate-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Add Candidate\",\n                ref: candidateField,\n                onChange: e => {\n                  setName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"\",\n                type: \"button\",\n                onClick: () => {\n                  const newCandidate = {\n                    name,\n                    info\n                  };\n                  setCandidates([...candidates, newCandidate]);\n                  if (candidateField.current) candidateField.current.value = \"\";\n                  if (candidateInfoField.current) candidateInfoField.current.value = \"\";\n                },\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-candidate-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Candidate Info\",\n                ref: candidateInfoField,\n                onChange: e => {\n                  setInfo(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button button-primary\",\n            type: \"submit\",\n            children: \"Start Election\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Start, \"Cu/7xLvJ+dsGttT/NGh3AZagyJ4=\");\n\n_c = Start;\nexport default Start;\n\nvar _c;\n\n$RefreshReg$(_c, \"Start\");","map":{"version":3,"sources":["/Users/aadhib/Downloads/Blockchain-Based-Voting-System-main/frontend/src/pages/Admin/Start.tsx"],"names":["React","useRef","useState","Formik","axios","yup","schema","object","name","string","min","required","description","Start","candidates","setCandidates","loading","setLoading","error","setError","setName","info","setInfo","candidateField","candidateInfoField","candidatesError","length","i","candidate","post","then","_","window","location","reload","catch","err","message","response","data","slice","errors","touched","getFieldProps","handleSubmit","map","index","newList","indexOf","splice","e","target","value","newCandidate","current"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport axios from \"../../axios\";\nimport * as yup from \"yup\";\n\nconst schema = yup.object({\n  name: yup.string().min(3).required(),\n  description: yup.string().min(10).required(),\n});\n\ninterface Candidate {\n  name: string;\n  info: string;\n}\n\nconst Start = () => {\n  const [candidates, setCandidates] = useState<Array<Candidate>>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [info, setInfo] = useState<string>(\"\");\n\n  const candidateField = useRef<HTMLInputElement>(null);\n  const candidateInfoField = useRef<HTMLInputElement>(null);\n\n  return (\n    <div className=\"form-container\">\n      {error !== \"\" ? <div className=\"error-message\">{error}</div> : null}\n\n      <Formik\n        initialValues={{\n          name: \"\",\n          description: \"\",\n        }}\n        validationSchema={schema}\n        onSubmit={({ name, description }) => {\n          setLoading(true);\n\n          let candidatesError = \"\";\n\n          if (candidates.length < 2) candidatesError = \"Not Enough Candidates\";\n\n          for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n\n            if (candidate.name.length < 3) {\n              candidatesError = \"invalid name \" + candidate.name;\n              break;\n            }\n\n            if (candidate.info.length < 10) {\n              candidatesError = \"invalid info for \" + candidate.name;\n              break;\n            }\n          }\n\n          setError(candidatesError);\n\n          if (candidatesError === \"\") {\n            axios\n              .post(\"/polls/start\", { name, description, candidates })\n              .then((_) => {\n                window.location.reload();\n              })\n              .catch((err) => {\n                let error = err.message;\n                if (err?.response?.data) error = err.response.data;\n                setError(error.slice(0, 50));\n                setLoading(false);\n              });\n          }\n        }}\n      >\n        {({ errors, touched, getFieldProps, handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            <div className=\"input-container\">\n              <input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Poll Name\"\n                {...getFieldProps(\"name\")}\n              />\n\n              <div className=\"form-error-text\">\n                {touched.name && errors.name ? errors.name : null}\n              </div>\n            </div>\n\n            <div className=\"input-container\">\n              <input\n                id=\"description\"\n                type=\"text\"\n                placeholder=\"Poll Description\"\n                {...getFieldProps(\"description\")}\n              />\n\n              <div className=\"form-error-text\">\n                {touched.description && errors.description\n                  ? errors.description\n                  : null}\n              </div>\n            </div>\n\n            {candidates.length !== 0 ? (\n              <div className=\"candidates-container\">\n                {candidates.map(({ name, info }, index) => (\n                  <div key={index} className=\"candidate-wrapper\">\n                    <span>{name}</span>\n                    <span\n                      onClick={() => {\n                        const newList = [...candidates];\n                        const i = newList.indexOf({ name, info });\n                        newList.splice(i, 1);\n\n                        setCandidates(newList);\n                      }}\n                      className=\"remove\"\n                    >\n                      <i className=\"bi bi-dash-circle\"></i>\n                    </span>\n                  </div>\n                ))}\n              </div>\n            ) : null}\n\n            <div className=\"input-container\">\n              <div className=\"add-candidate-wrapper\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Add Candidate\"\n                  ref={candidateField}\n                  onChange={(e) => {\n                    setName(e.target.value);\n                  }}\n                />\n\n                <button\n                  className=\"\"\n                  type=\"button\"\n                  onClick={() => {\n                    const newCandidate = { name, info };\n                    setCandidates([...candidates, newCandidate]);\n                    if (candidateField.current)\n                      candidateField.current.value = \"\";\n                    if (candidateInfoField.current)\n                      candidateInfoField.current.value = \"\";\n                  }}\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n\n            <div className=\"input-container\">\n              <div className=\"add-candidate-wrapper\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Candidate Info\"\n                  ref={candidateInfoField}\n                  onChange={(e) => {\n                    setInfo(e.target.value);\n                  }}\n                />\n              </div>\n            </div>\n\n            <button className=\"login-button button-primary\" type=\"submit\">\n              Start Election\n            </button>\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Start;\n"]},"metadata":{},"sourceType":"module"}