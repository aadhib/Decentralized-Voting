{"ast":null,"code":"var _jsxFileName = \"/Users/aadhib/Downloads/Blockchain-Based-Voting-System-main/frontend/src/pages/Admin/Result.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"../../axios\";\nimport Chart from \"../../components/Polls/Chart\";\nimport Panel from \"../../components/Polls/Panel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Result = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({\n    name: \"\",\n    description: \"\",\n    votes: {}\n  });\n  useEffect(() => {\n    axios.get(\"/polls/\").then(res => {\n      setData(res.data);\n      setLoading(false);\n    });\n  }, []);\n\n  const resetElection = () => {\n    axios.post(\"/polls/reset\").then(_ => window.location.reload()).catch(err => console.log({\n      err\n    }));\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    name: data.name,\n    description: data.description,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Chart, {\n        votes: data.votes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetElection,\n        className: \"end-election-button button-primary\",\n        children: \"Start New Election\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Result, \"XSgzUsxICW9ARMpMBAOx6uem5R0=\");\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/aadhib/Downloads/Blockchain-Based-Voting-System-main/frontend/src/pages/Admin/Result.tsx"],"names":["React","useEffect","useState","axios","Chart","Panel","Result","loading","setLoading","data","setData","name","description","votes","get","then","res","resetElection","post","_","window","location","reload","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,WAAW,EAAE,EAAzB;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GAAD,CAAhC;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACW,GAAN,CAAU,SAAV,EAAqBC,IAArB,CAA2BC,GAAD,IAAS;AACjCN,MAAAA,OAAO,CAACM,GAAG,CAACP,IAAL,CAAP;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMS,aAAa,GAAG,MAAM;AAC1Bd,IAAAA,KAAK,CACFe,IADH,CACQ,cADR,EAEGH,IAFH,CAESI,CAAD,IAAOC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAFf,EAGGC,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA;AAAF,KAAZ,CAHlB;AAID,GALD;;AAOA,MAAIjB,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEE,IAAI,CAACE,IAAlB;AAAwB,IAAA,WAAW,EAAEF,IAAI,CAACG,WAA1C;AAAA,2BACE;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEH,IAAI,CAACI;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,QAAA,OAAO,EAAEI,aADX;AAEE,QAAA,SAAS,EAAC,oCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlCD;;GAAMX,M;;KAAAA,M;AAoCN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"../../axios\";\nimport Chart from \"../../components/Polls/Chart\";\nimport Panel from \"../../components/Polls/Panel\";\n\nconst Result = () => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({ name: \"\", description: \"\", votes: {} });\n\n  useEffect(() => {\n    axios.get(\"/polls/\").then((res) => {\n      setData(res.data);\n      setLoading(false);\n    });\n  }, []);\n\n  const resetElection = () => {\n    axios\n      .post(\"/polls/reset\")\n      .then((_) => window.location.reload())\n      .catch((err) => console.log({ err }));\n  };\n\n  if (loading) return <div></div>;\n\n  return (\n    <Panel name={data.name} description={data.description}>\n      <>\n        <Chart votes={data.votes} />\n\n        <button\n          onClick={resetElection}\n          className=\"end-election-button button-primary\"\n        >\n          Start New Election\n        </button>\n      </>\n    </Panel>\n  );\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}