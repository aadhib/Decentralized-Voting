{"ast":null,"code":"var _jsxFileName = \"/Users/aadhib/Documents/Main Project/Main Project _ Decentralized Voting /frontend/src/contexts/Auth.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  id: 0,\n  name: \"\",\n  isAdmin: false,\n  authenticated: false,\n  accessToken: \"\",\n  loading: true,\n  authenticate: (user, token) => {},\n  logout: () => {}\n});\nexport default _s(props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [authentication, setAuthentication] = useState({\n    id: 0,\n    name: \"\",\n    isAdmin: false,\n    authenticated: false,\n    accessToken: \"\",\n    loading: true\n  });\n\n  const checkAuthentication = () => {\n    axios.post(\"/auth/check\").then(res => authenticate(res.data.user, res.data.accessToken, false)).catch(error => {\n      console.log(error);\n      setAuthentication({ ...authentication,\n        loading: false\n      });\n    });\n  };\n\n  useEffect(() => {\n    checkAuthentication();\n    const interval = setInterval(checkAuthentication, 5 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const authenticate = function (user, token) {\n    let redirect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    setAuthentication({\n      id: user.id,\n      name: user.name,\n      isAdmin: user.admin,\n      authenticated: true,\n      accessToken: token,\n      loading: false\n    });\n    if (redirect) navigate(\"/\");\n  };\n\n  const logout = async () => {\n    await axios.post(\"/auth/logout\");\n    setAuthentication({\n      id: 0,\n      name: \"\",\n      isAdmin: false,\n      authenticated: false,\n      accessToken: \"\",\n      loading: false\n    });\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      id: authentication.id,\n      name: authentication.name,\n      isAdmin: authentication.isAdmin,\n      authenticated: authentication.authenticated,\n      accessToken: authentication.accessToken,\n      loading: authentication.loading,\n      authenticate,\n      logout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}, \"EI0rEe1lRtmdbMgbcUvJfAPtQ8A=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"sources":["/Users/aadhib/Documents/Main Project/Main Project _ Decentralized Voting /frontend/src/contexts/Auth.tsx"],"names":["React","createContext","useEffect","useState","useNavigate","axios","AuthContext","id","name","isAdmin","authenticated","accessToken","loading","authenticate","user","token","logout","props","navigate","authentication","setAuthentication","checkAuthentication","post","then","res","data","catch","error","console","log","interval","setInterval","clearInterval","redirect","admin","children"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport axios from \"../axios\";\n\ntype ContextProps = {\n  children: JSX.Element;\n};\n\ntype User = {\n  id: number;\n  name: string;\n  admin: boolean;\n};\n\nexport const AuthContext = createContext({\n  id: 0,\n  name: \"\",\n  isAdmin: false,\n  authenticated: false,\n  accessToken: \"\",\n  loading: true,\n  authenticate: (user: User, token: string) => {},\n  logout: () => {},\n});\n\nexport default (props: ContextProps): JSX.Element => {\n  const navigate = useNavigate();\n\n  const [authentication, setAuthentication] = useState({\n    id: 0,\n    name: \"\",\n    isAdmin: false,\n    authenticated: false,\n    accessToken: \"\",\n    loading: true,\n  });\n\n  const checkAuthentication = () => {\n    axios\n      .post(\"/auth/check\")\n      .then((res) => authenticate(res.data.user, res.data.accessToken, false))\n      .catch((error) => {\n        console.log(error);\n        setAuthentication({ ...authentication, loading: false });\n      });\n  };\n\n  useEffect(() => {\n    checkAuthentication();\n\n    const interval = setInterval(checkAuthentication, 5 * 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const authenticate = (\n    user: User,\n    token: string,\n    redirect: boolean = true\n  ) => {\n    setAuthentication({\n      id: user.id,\n      name: user.name,\n      isAdmin: user.admin,\n      authenticated: true,\n      accessToken: token,\n      loading: false,\n    });\n\n    if (redirect) navigate(\"/\");\n  };\n\n  const logout = async () => {\n    await axios.post(\"/auth/logout\");\n\n    setAuthentication({\n      id: 0,\n      name: \"\",\n      isAdmin: false,\n      authenticated: false,\n      accessToken: \"\",\n      loading: false,\n    });\n\n    navigate(\"/\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        id: authentication.id,\n        name: authentication.name,\n        isAdmin: authentication.isAdmin,\n        authenticated: authentication.authenticated,\n        accessToken: authentication.accessToken,\n        loading: authentication.loading,\n        authenticate,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}